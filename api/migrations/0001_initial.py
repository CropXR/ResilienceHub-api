# Generated by Django 5.1.6 on 2025-03-27 12:11

import api.permissions
import django.db.models.deletion
import django_countries.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('website', models.URLField(blank=True)),
                ('address_street', models.TextField(blank=True)),
                ('address_house_number', models.TextField(blank=True)),
                ('address_addition', models.TextField(blank=True, null=True)),
                ('address_postcode', models.TextField(blank=True)),
                ('address_city', models.CharField(max_length=100)),
                ('address_country', django_countries.fields.CountryField(max_length=2)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Investigation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accession_code', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=1000)),
                ('description', models.TextField()),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('submission_date', models.DateField(blank=True, null=True)),
                ('public_release_date', models.DateField(blank=True, null=True)),
                ('security_level', models.CharField(choices=[('public', 'Public'), ('internal', 'Internal'), ('restricted', 'Restricted'), ('confidential', 'Confidential')], default='confidential', max_length=20)),
            ],
            options={
                'ordering': ['id'],
                'permissions': [('manage_permissions_investigation', 'Can manage permissions for investigation')],
            },
            bases=(models.Model, api.permissions.GuardianMixin),
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accession_code', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('security_level', models.CharField(choices=[('public', 'Public'), ('internal', 'Internal'), ('restricted', 'Restricted'), ('confidential', 'Confidential')], default='confidential', max_length=20)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('sample_type', models.CharField(max_length=50)),
            ],
            options={
                'ordering': ['id'],
                'permissions': [('manage_permissions', 'Can manage permissions')],
                'abstract': False,
            },
            bases=(models.Model, api.permissions.GuardianMixin),
        ),
        migrations.CreateModel(
            name='InvestigationInstitution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contribution_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('join_date', models.DateField()),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.institution')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.investigation')),
            ],
            options={
                'unique_together': {('project', 'institution')},
            },
        ),
        migrations.AddField(
            model_name='investigation',
            name='participating_institutions',
            field=models.ManyToManyField(related_name='research_projects', through='api.InvestigationInstitution', to='api.institution'),
        ),
        migrations.CreateModel(
            name='Study',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accession_code', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('study_label', models.CharField(max_length=10)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('public_release_date', models.DateField(blank=True, null=True)),
                ('submission_date', models.DateField(blank=True, null=True)),
                ('study_design', models.TextField(blank=True, null=True)),
                ('security_level', models.CharField(choices=[('public', 'Public'), ('internal', 'Internal'), ('restricted', 'Restricted'), ('confidential', 'Confidential')], default='confidential', max_length=20)),
                ('experiment_factor_type', models.CharField(max_length=100)),
                ('experiment_factor_description', models.TextField(max_length=100)),
                ('experiment_factor_values', models.TextField(max_length=100)),
                ('investigation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='studies', to='api.investigation')),
            ],
            options={
                'ordering': ['id'],
                'permissions': [('manage_permissions_study', 'Can manage permissions for study')],
            },
            bases=(models.Model, api.permissions.GuardianMixin),
        ),
        migrations.CreateModel(
            name='Assay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accession_code', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('measurement_type', models.CharField(choices=[('genomics', 'Genomics'), ('transcriptomics', 'Transcriptomics'), ('proteomics', 'Proteomics'), ('metabolomics', 'Metabolomics'), ('phenotyping', 'Phenotyping'), ('other', 'Other')], max_length=50)),
                ('title', models.CharField(max_length=1000)),
                ('technology_platform', models.CharField(choices=[('seq', 'Sequencing'), ('micro', 'Microarray'), ('ms', 'Mass Spectrometry'), ('nmr', 'NMR'), ('other', 'Other')], max_length=50)),
                ('description', models.TextField()),
                ('study', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assays', to='api.study')),
            ],
            options={
                'ordering': ['id'],
                'permissions': [('manage_permissions', 'Can manage permissions')],
                'abstract': False,
            },
            bases=(models.Model, api.permissions.GuardianMixin),
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('guest', 'Guest'), ('internal', 'Internal'), ('authorized', 'Authorized'), ('contributor', 'Contributor'), ('owner', 'Owner'), ('admin', 'Admin')], max_length=20)),
                ('object_id', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['content_type', 'object_id'], name='api_userrol_content_507197_idx')],
                'unique_together': {('user', 'content_type', 'object_id')},
            },
        ),
    ]
